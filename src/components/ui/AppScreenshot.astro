---
interface Props {
  src?: string;
  alt: string;
  title: string;
  description: string;
  icon?: string;
  className?: string;
}

const {
  src,
  alt,
  title,
  description,
  icon = "video",
  className = ""
} = Astro.props;

const getIconPath = (iconType: string) => {
  switch (iconType) {
    case "organize":
      return "M19 11H5m14-7H5m14 14H5";
    case "export":
      return "M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z";
    case "categories":
      return "M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z";
    default:
      return "M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z";
  }
};

const iconPath = getIconPath(icon);
---

<div class={`relative ${className}`}>
  {src ? (
    <>
      <img
        src={src}
        alt={alt}
        class="w-full h-full object-cover rounded-lg shadow-lg"
        loading="lazy"
        decoding="async"
        width="800"
        height="600"
        onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
      />
      <!-- Fallback when image fails to load -->
      <div class="bg-gradient-to-br from-neutral-100 to-neutral-200 rounded-lg shadow-lg overflow-hidden aspect-video items-center justify-center hidden">
        <div class="text-center">
          <div class="w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={iconPath}/>
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-neutral-700 mb-2">{title}</h3>
          <p class="text-sm text-neutral-500">{description}</p>
        </div>
      </div>
    </>
  ) : (
    <div class="bg-gradient-to-br from-neutral-100 to-neutral-200 rounded-lg shadow-lg overflow-hidden aspect-video flex items-center justify-center">
      <div class="text-center">
        <div class="w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={iconPath}/>
          </svg>
        </div>
        <h3 class="text-lg font-semibold text-neutral-700 mb-2">{title}</h3>
        <p class="text-sm text-neutral-500">{description}</p>
      </div>
    </div>
  )}

  {!src && (
    <div class="absolute top-4 right-4">
      <span class="bg-primary-500 text-white px-3 py-1 rounded-full text-xs font-medium">
        Screenshot Coming Soon
      </span>
    </div>
  )}
</div>